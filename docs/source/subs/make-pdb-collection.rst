make-pdb-collection
-------------------

A PDB collection is a set of representative PDB files for small molecules, such as lipids.  Collections are associated with CHARMMFF "streams", and one more more collections comprise a PDB "repository".  A PDB collection must be a directory whose name is its ID, and whose contents are either standalone PDB files with the naming conventions ``<RESI>.pdb``, or subdirectories named after the RESI, each of which contains a set of PDB files that represent different configurations of the molecule. Pestifer's built-in PDB repository was constructed from selected residues in the lipid, water, and ion streams of the CHARMM36 force field.

You can see what RESIs are included in pestifer using the ``show-resources`` subcommand:

.. code-block:: console

    $ pestifer show-resources --charmmff pdb
    PDB Collections:
    PDBCollection(registered_at=2, streamID=water_ions, path=water_ions.tgz, resnames=['BAR', 'CAL', 'CD2', 'CES', 'CLA', 'LIT', 'MG', 'POT', 'RUB', 'SOD', 'TIP3', 'ZN2'])
    PDBCollection(registered_at=1, streamID=lipid, path=lipid.tgz, resnames=['DAPC', 'DLPA', 'DLPC', 'DLPE', 'DLPG', 'DLPS', 'DMPA', 'DMPC', 'DMPE', 'DMPG', 'DMPS', 'DOPA', 'DOPC', 'DOPE', 'DOPG', 'DOPS', 'DPPA', 'DPPC', 'DPPE', 'DPPG', 'DPPS', 'DSPA', 'DSPC', 'DSPE', 'DSPG', 'DSPS', 'LPPC', 'POPA', 'POPC', 'POPE', 'POPG', 'POPS', 'SAPC', 'SDPC', 'SOPC', '23SM', 'ASM', 'BSM', 'CER160', 'CER180', 'CER181', 'CER2', 'CER200', 'CER220', 'CER240', 'CER241', 'CER3E', 'LSM', 'NSM', 'OSM', 'PSM', 'SSM', 'C6DHPC', 'CHL1', 'CHSD', 'CHSP', 'ERG', 'SITO', 'STIG'])

This shows that there are two PDB collections in the built-in repository: one for lipids and another for water and ions.  The lipid and water/ion residues are extracted from the top-level topology files in CHARMM36.  Additional lipids are included from the ``cholestero`` and ``sphingo`` substreams of the lipid stream.  Any of these residues can be referred to in a ``make_membrane_system`` task (See :ref:`make_membrane_system`).

With this subcommand, the user can build their own PDB collections for pestifer to use.   ``make-pdb-collection`` can generate a PDB collection by scanning the standard CHARMM36FF stream files for a given stream, and then generating a set of PDB files for each RESI in the stream.  The PDB files are generated by running a short NAMD simulation of the molecule in vacuum subject to conformational stabilizing forces, and then sampling the coordinates from the simulation.  To make your own ``lipid`` collections, for example, you would run the following command:

.. code-block:: console

    $ pestifer make-pdb-collection --streamID lipid

This will initiate a sequence of NAMD runs that will generate a PDB collection for the ``lipid`` stream.  The collection will be stored in a directory called ``lipid/`` in your current working directory, and it will contain subdirectories for each RESI in the lipid stream, each of which contains 10 unique PDB samples of the molecule in various configurations.  If you want to reference this collection in a ``make_membrane_system`` task, you will need to set the ``pdbcollections`` variable in your config file to point to the directory where the collection is stored.


where ``stream-name`` is the name of the CHARMM36 molecule type (e.g., lipid) and ``resi-name`` is a RESI defined in the appropriate stream file.

``make-resi-database`` has a lot of options; the defaults provided have been tested on all lipid RESIs in the CHARMM36FF and seem adequate.

``make-resi-database`` will generate a directory called ``data/<stream-name>/<resi-name>/``, under which you will find 10 unique PDB samples of the molecule in various configurations.

A ``bilayer`` task can be told which of these configs to use when packing a system.  To use your own locally generated PDBs from ``make-resi-database``, you need to declare the location of your local database in your config file.  To do this, you need to assign the value ``data`` to the ``pdb_depot`` variable in the ``paths`` section.  You build a database outside your build directory to collect molecules you want to use in multiple different builds, and just refer to that relative to your build directory.

A directory tree recognizable as a PDB depot has subdirectories that are known CHARMM36FF streams, each of which can contain just naked PDB files with names of the form ``<RESI>.pdb``, or subdirectories for each RESI with the configurational samples mentioned above. 

